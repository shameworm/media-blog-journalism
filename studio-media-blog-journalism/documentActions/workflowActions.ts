import {DocumentActionComponent} from 'sanity'

// Action –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥
export const sendToReviewAction: DocumentActionComponent = (props) => {
  const {draft, published, type, id} = props

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ü–µ –¥–æ–∫—É–º–µ–Ω—Ç –∑ workflow
  const workflowTypes = ['biography', 'reflection', 'largeProject']
  if (!workflowTypes.includes(type)) {
    return null
  }

  const doc = draft || published
  const currentStatus = doc?.status

  // –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Å—Ç–∞—Ç—É—Å draft –∞–±–æ changes_requested
  if (currentStatus !== 'draft' && currentStatus !== 'changes_requested') {
    return null
  }

  return {
    label: '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–∞ –†–æ–∑–≥–ª—è–¥',
    icon: () => 'üëÄ',
    onHandle: async () => {
      const {patch} = props

      // –î–æ–¥–∞—î–º–æ –∑–∞–ø–∏—Å –≤ —ñ—Å—Ç–æ—Ä—ñ—é
      const historyEntry = {
        status: 'in_review',
        changedBy: 'Current User', // –í —Ä–µ–∞–ª—å–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ - –≤–∑—è—Ç–∏ –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        changedAt: new Date().toISOString(),
        note: '–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥ –≥–æ–ª–æ–≤–Ω–æ–º—É —Ä–µ–¥–∞–∫—Ç–æ—Ä—É',
      }

      patch.execute([
        {set: {status: 'in_review'}},
        {
          setIfMissing: {revisionHistory: []},
        },
        {
          insert: {
            after: 'revisionHistory[-1]',
            items: [historyEntry],
          },
        },
      ])

      props.onComplete()
    },
  }
}

// Action –¥–ª—è —Å—Ö–≤–∞–ª–µ–Ω–Ω—è (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–∏—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä—ñ–≤)
export const approveAction: DocumentActionComponent = (props) => {
  const {draft, published, type} = props

  const workflowTypes = ['biography', 'reflection', 'largeProject']
  if (!workflowTypes.includes(type)) {
    return null
  }

  const doc = draft || published
  const currentStatus = doc?.status

  // –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Å—Ç–∞—Ç—É—Å in_review
  if (currentStatus !== 'in_review') {
    return null
  }

  return {
    label: '–°—Ö–≤–∞–ª–∏—Ç–∏',
    icon: () => '‚úÖ',
    tone: 'positive',
    onHandle: async () => {
      const {patch} = props

      const historyEntry = {
        status: 'approved',
        changedBy: 'Chief Editor', // –í —Ä–µ–∞–ª—å–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ - –≤–∑—è—Ç–∏ –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        changedAt: new Date().toISOString(),
        note: '–°—Ö–≤–∞–ª–µ–Ω–æ –≥–æ–ª–æ–≤–Ω–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º',
      }

      patch.execute([
        {set: {status: 'approved'}},
        {
          setIfMissing: {revisionHistory: []},
        },
        {
          insert: {
            after: 'revisionHistory[-1]',
            items: [historyEntry],
          },
        },
      ])

      props.onComplete()
    },
  }
}

// Action –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—è–º–∏
export const requestChangesAction: DocumentActionComponent = (props) => {
  const {draft, published, type} = props

  const workflowTypes = ['biography', 'reflection', 'largeProject']
  if (!workflowTypes.includes(type)) {
    return null
  }

  const doc = draft || published
  const currentStatus = doc?.status

  // –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Å—Ç–∞—Ç—É—Å in_review
  if (currentStatus !== 'in_review') {
    return null
  }

  return {
    label: '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–∞ –î–æ–æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è',
    icon: () => 'üîÑ',
    tone: 'caution',
    onHandle: async () => {
      const {patch} = props

      const historyEntry = {
        status: 'changes_requested',
        changedBy: 'Chief Editor',
        changedAt: new Date().toISOString(),
        note: '–ü–æ–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ –¥–æ–æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è. –ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ',
      }

      patch.execute([
        {set: {status: 'changes_requested'}},
        {
          setIfMissing: {revisionHistory: []},
        },
        {
          insert: {
            after: 'revisionHistory[-1]',
            items: [historyEntry],
          },
        },
      ])

      props.onComplete()
    },
  }
}

// Action –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó
export const publishWorkflowAction: DocumentActionComponent = (props) => {
  const {draft, published, type} = props

  const workflowTypes = ['biography', 'reflection', 'largeProject']
  if (!workflowTypes.includes(type)) {
    return null
  }

  const doc = draft || published
  const currentStatus = doc?.status

  // –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Å—Ç–∞—Ç—É—Å approved
  if (currentStatus !== 'approved') {
    return null
  }

  return {
    label: '–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏',
    icon: () => 'üåü',
    tone: 'positive',
    onHandle: async () => {
      const {patch} = props

      const historyEntry = {
        status: 'published',
        changedBy: 'System',
        changedAt: new Date().toISOString(),
        note: '–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ',
      }

      patch.execute([
        {set: {status: 'published'}},
        {
          setIfMissing: {revisionHistory: []},
        },
        {
          insert: {
            after: 'revisionHistory[-1]',
            items: [historyEntry],
          },
        },
      ])

      props.onComplete()
    },
  }
}
