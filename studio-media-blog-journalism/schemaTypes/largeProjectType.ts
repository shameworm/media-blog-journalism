import {defineField, defineType} from 'sanity'

export const largeProjectType = defineType({
  name: 'largeProject',
  title: '–í–µ–ª–∏–∫—ñ –ü—Ä–æ–µ–∫—Ç–∏',
  type: 'document',
  fields: [
    defineField({
      name: 'title',
      title: '–ù–∞–∑–≤–∞ –ü—Ä–æ–µ–∫—Ç—É',
      type: 'string',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'slug',
      title: 'Slug',
      type: 'slug',
      options: {
        source: 'title',
        maxLength: 96,
      },
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'description',
      title: '–û–ø–∏—Å –ü—Ä–æ–µ–∫—Ç—É',
      type: 'text',
      rows: 4,
      description: '–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –ø—Ä–æ —â–æ –ø—Ä–æ–µ–∫—Ç',
    }),
    defineField({
      name: 'coverImage',
      title: '–û–±–∫–ª–∞–¥–∏–Ω–∫–∞ –ü—Ä–æ–µ–∫—Ç—É',
      type: 'image',
      options: {
        hotspot: true,
      },
      fields: [
        {
          name: 'alt',
          type: 'string',
          title: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Ç–µ–∫—Å—Ç',
        },
      ],
    }),

    // –°–ø—ñ–≤–∞–≤—Ç–æ—Ä–∏ - –º–∞—Å–∏–≤ –¥–ª—è –∫—ñ–ª—å–∫–æ—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä—ñ–≤/—Å—Ç—É–¥–µ–Ω—Ç—ñ–≤
    defineField({
      name: 'collaborators',
      title: '–°–ø—ñ–≤–∞–≤—Ç–æ—Ä–∏',
      type: 'array',
      of: [
        {
          type: 'object',
          fields: [
            {
              name: 'name',
              title: '–Ü–º\'—è',
              type: 'string',
              validation: (Rule) => Rule.required(),
            },
            {
              name: 'email',
              title: 'Email',
              type: 'string',
              validation: (Rule) => Rule.email(),
            },
            {
              name: 'role',
              title: '–†–æ–ª—å –≤ –ü—Ä–æ–µ–∫—Ç—ñ',
              type: 'string',
              description: '–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ê–≤—Ç–æ—Ä, –§–æ—Ç–æ–≥—Ä–∞—Ñ, –†–µ–¥–∞–∫—Ç–æ—Ä',
            },
          ],
          preview: {
            select: {
              title: 'name',
              subtitle: 'role',
            },
          },
        },
      ],
      validation: (Rule) => Rule.required().min(1).error('–î–æ–¥–∞–π—Ç–µ —Ö–æ—á–∞ –± –æ–¥–Ω–æ–≥–æ —Å–ø—ñ–≤–∞–≤—Ç–æ—Ä–∞'),
      description: '–î–æ–¥–∞–π—Ç–µ –≤—Å—ñ—Ö —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤/—Ä–µ–¥–∞–∫—Ç–æ—Ä—ñ–≤, —è–∫—ñ –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º',
    }),

    // –ö–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç—É
    defineField({
      name: 'content',
      title: '–ö–æ–Ω—Ç–µ–Ω—Ç –ü—Ä–æ–µ–∫—Ç—É',
      type: 'array',
      of: [
        {
          type: 'block',
          styles: [
            {title: '–ó–≤–∏—á–∞–π–Ω–∏–π', value: 'normal'},
            {title: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ 1', value: 'h1'},
            {title: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2', value: 'h2'},
            {title: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ 3', value: 'h3'},
            {title: '–¶–∏—Ç–∞—Ç–∞', value: 'blockquote'},
          ],
          marks: {
            decorators: [
              {title: '–ñ–∏—Ä–Ω–∏–π', value: 'strong'},
              {title: '–ö—É—Ä—Å–∏–≤', value: 'em'},
              {title: '–ü—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–∏–π', value: 'underline'},
            ],
            annotations: [
              {
                name: 'link',
                type: 'object',
                title: '–ü–æ—Å–∏–ª–∞–Ω–Ω—è',
                fields: [
                  {
                    name: 'href',
                    type: 'url',
                    title: 'URL',
                  },
                ],
              },
            ],
          },
        },
        {
          type: 'image',
          options: {
            hotspot: true,
          },
          fields: [
            {
              name: 'alt',
              type: 'string',
              title: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Ç–µ–∫—Å—Ç',
            },
            {
              name: 'caption',
              type: 'string',
              title: '–ü—ñ–¥–ø–∏—Å',
            },
            {
              name: 'source',
              type: 'string',
              title: '–î–∂–µ—Ä–µ–ª–æ',
            },
          ],
        },
      ],
      validation: (Rule) => Rule.required(),
    }),

    defineField({
      name: 'startedAt',
      title: '–î–∞—Ç–∞ –ü–æ—á–∞—Ç–∫—É',
      type: 'date',
    }),
    defineField({
      name: 'completedAt',
      title: '–î–∞—Ç–∞ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è',
      type: 'date',
    }),

    // Workflow –ø–æ–ª—è
    defineField({
      name: 'status',
      title: '–°—Ç–∞—Ç—É—Å',
      type: 'string',
      options: {
        list: [
          {title: '–ß–µ—Ä–Ω–µ—Ç–∫–∞', value: 'draft'},
          {title: '–í –†–æ–±–æ—Ç—ñ', value: 'in_progress'},
          {title: '–ù–∞ –†–æ–∑–≥–ª—è–¥—ñ', value: 'in_review'},
          {title: '–ü–æ—Ç—Ä–µ–±—É—î –ó–º—ñ–Ω', value: 'changes_requested'},
          {title: '–°—Ö–≤–∞–ª–µ–Ω–æ', value: 'approved'},
          {title: '–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ', value: 'published'},
        ],
      },
      initialValue: 'draft',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'assignedChiefEditor',
      title: '–ì–æ–ª–æ–≤–Ω–∏–π –†–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏',
      type: 'string',
      description: '–Ü–º\'—è –∞–±–æ email –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞',
    }),
    defineField({
      name: 'comments',
      title: '–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ',
      type: 'array',
      of: [
        {
          type: 'object',
          fields: [
            {
              name: 'author',
              title: '–ê–≤—Ç–æ—Ä',
              type: 'string',
            },
            {
              name: 'text',
              title: '–¢–µ–∫—Å—Ç –ö–æ–º–µ–Ω—Ç–∞—Ä—è',
              type: 'text',
              rows: 3,
            },
            {
              name: 'createdAt',
              title: '–î–∞—Ç–∞ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è',
              type: 'datetime',
              initialValue: () => new Date().toISOString(),
            },
            {
              name: 'resolved',
              title: '–í–∏—Ä—ñ—à–µ–Ω–æ',
              type: 'boolean',
              initialValue: false,
            },
          ],
          preview: {
            select: {
              title: 'author',
              subtitle: 'text',
              resolved: 'resolved',
            },
            prepare({title, subtitle, resolved}) {
              return {
                title: `${resolved ? '‚úì' : '‚óã'} ${title}`,
                subtitle: subtitle,
              }
            },
          },
        },
      ],
    }),
    defineField({
      name: 'revisionHistory',
      title: '–Ü—Å—Ç–æ—Ä—ñ—è –ó–º—ñ–Ω –°—Ç–∞—Ç—É—Å—É',
      type: 'array',
      readOnly: true,
      of: [
        {
          type: 'object',
          fields: [
            {
              name: 'status',
              title: '–°—Ç–∞—Ç—É—Å',
              type: 'string',
            },
            {
              name: 'changedBy',
              title: '–ó–º—ñ–Ω–µ–Ω–æ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º',
              type: 'string',
            },
            {
              name: 'changedAt',
              title: '–î–∞—Ç–∞ –ó–º—ñ–Ω–∏',
              type: 'datetime',
            },
            {
              name: 'note',
              title: '–ü—Ä–∏–º—ñ—Ç–∫–∞',
              type: 'text',
            },
          ],
        },
      ],
    }),
  ],
  preview: {
    select: {
      title: 'title',
      status: 'status',
      media: 'coverImage',
      collaborators: 'collaborators',
    },
    prepare({title, status, media, collaborators}) {
      const statusEmoji = {
        draft: 'üìù',
        in_progress: '‚öôÔ∏è',
        in_review: 'üëÄ',
        changes_requested: 'üîÑ',
        approved: '‚úÖ',
        published: 'üåü',
      }
      const collaboratorCount = collaborators ? collaborators.length : 0
      return {
        title: title,
        subtitle: `${collaboratorCount} —Å–ø—ñ–≤–∞–≤—Ç–æ—Ä(—ñ–≤) | ${statusEmoji[status as keyof typeof statusEmoji] || ''} ${status}`,
        media: media,
      }
    },
  },
})
